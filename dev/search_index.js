var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Offshore_Profit_Shifting_Replication","category":"page"},{"location":"#Offshore*Profit*Shifting_Replication","page":"Home","title":"OffshoreProfitShifting_Replication","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for OffshoreProfitShifting_Replication.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Offshore_Profit_Shifting_Replication]","category":"page"},{"location":"#Offshore_Profit_Shifting_Replication.logg-Tuple{Vector}","page":"Home","title":"Offshore_Profit_Shifting_Replication.logg","text":"logg(x::Vector)\n\nCalculates the logarithmic growth rate for a vector x. It does this by computing the log of the ratio of subsequent elements in the vector. The first element of the resulting vector is NaN as there's no previous element for the first value in x.\n\nArguments\n\nx::Vector: A numeric vector for which the logarithmic growth rate needs to be computed.\n\nReturns\n\nVector: A vector of the same length as x, with the first element being NaN and the rest being the log growth rate of x.\n\nExample\n\n```julia julia> logg([1, 2, 3, 4]) 3-element Array{Float64,1}:\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.makedataforplot2-Tuple{Any}","page":"Home","title":"Offshore_Profit_Shifting_Replication.makedataforplot2","text":"makedataforplot2()\n\nThis function reads and processes data for creating plot 2. It reads data from the \"OutputAggStdError.xlsx\" file, performs necessary data manipulations and calculations. \n\nSpecifically, the function does the following:\n\nReads the \"OutputAggStdError.xlsx\" file.\nCreates a DataFrame with all combinations of unique Panels and Years.\nInterpolates missing values within the DataFrame.\nJoins the DataFrame with the public DataFrame.\nComputes statistics across panels for each Year.\n\nUsage\n\n```julia panel_stats = makedataforplot2()\n\nReturns\n\npanel_stats: A DataFrame containing computed statistics for each Panel. This function takes no arguments.\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.makedataforplot7-Tuple{Any}","page":"Home","title":"Offshore_Profit_Shifting_Replication.makedataforplot7","text":"makedataforplot7()\n\nThis function prepares data needed for Plot 7. It performs calculations on several variables such as gdibusn, gdibusr, uprod_log, uprod_gr, uprod_cum, gvabusr_adj, gdibusr_adj, aprod_log, aprod_gr, and aprod_cum from the public and adj_agg datasets. \n\nThe function returns a prod DataFrame, which contains the results of these calculations, necessary for plotting the seventh graph. \n\nReturns\n\nprod::DataFrame: A DataFrame that contains computed variables for Plot 7.\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.makedataforplot8-Tuple{Any}","page":"Home","title":"Offshore_Profit_Shifting_Replication.makedataforplot8","text":"makedataforplot8()\n\nProcesses and merges several data files for use in plotting. The function reads, renames, and processes data from specified Excel and CSV files, and calculates additional columns for each industry group.\n\nReturns\n\ninds: A DataFrame containing processed data for each industry group (rd, nrd, itu, nitu, itp, nitp) and year,         with additional computed growth rates and cumulative growth rates.\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.makeplotdata-NTuple{4, Any}","page":"Home","title":"Offshore_Profit_Shifting_Replication.makeplotdata","text":"makeplotdata()\n\nThis function prepares and processes the data that will be used to create specific plots. It reads data from multiple sources, performs interpolations to handle missing values, and applies specific transformations. \n\nThe function performs the following operations:\n\nReads data from \"aggregate.csv\" and \"OutputAdjNet.xlsx\" files.\nApplies a filter on the years between 1982 and 2017.\nInterpolates missing values within the data.\nAdds new columns to the DataFrame adj_agg, each being a product of an existing column and the income_adj_factor column from the public DataFrame.\nReads data from \"OutputAdjNetIndustry.xlsx\" and \"OutputAdjNetHaven.xlsx\", creates datasets with all combinations of unique years and respective unique identifier (IEDindPar and Haven), then joins them with the original data.\nFilters out specific industry codes from the adj_ind and adj_tax DataFrames.\nInterpolates missing values within the adj_ind and adj_tax DataFrames.\n\nAt the end, it returns four DataFrames: public, adj_agg, adj_ind, and adj_tax.\n\nUsage\n\n```julia public, adjagg, adjind, adjtax = makeplotdata(public, adjagg, adjind, adjtax)\n\nReturns\n\npublic: DataFrame read from the \"aggregate.csv\" file.\nadj_agg: DataFrame read and processed from the \"OutputAdjNet.xlsx\" file.\nadj_ind: DataFrame read and processed from the \"OutputAdjNetIndustry.xlsx\" file.\nadj_tax: DataFrame read and processed from the \"OutputAdjNetHaven.xlsx\" file.\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots1-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots1","text":"plots1()\n\nCreates a two-panel figure which shows the share of business-sector value added as a percentage for USDIA Income and Weighted Adjustment across years in panel A and their respective dollar values in panel B. \n\nEach panel represents a distinct subplot:\n\nPanel A: Displays the USDIA Income and Weighted Adjustment as a percentage of business-sector value added from 1980 to 2018. The USDIA Income is represented by a black line, while the Weighted Adjustment is depicted in blue.\nPanel B: Shows the USDIA Income and Weighted Adjustment in billions of dollars from 1980 to 2018. Similar to panel A, the USDIA Income is shown as a black line, and the Weighted Adjustment is shown as a blue line.\n\nThe resulting figure is saved as a PDF in the folder \"ReplicationFiles/figures\" with the name \"Figure1.pdf\".\n\nThis function employs the GR backend for generating plots and uses the Plots.jl package for constructing the multi-panel figure.\n\nUsage\n\n```julia plots1()\n\nNo arguments are needed for this function.\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots10-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots10","text":"This function replicates a figure 10, which consists of two subplots. The figure is saved in the folder \"ReplicationFiles/figures\" as a pdf file.\n\n# Usage\n\n```julia plots10()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots11-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots11","text":"This function replicates a figure 11, which consists of two subplots. The figure is saved in the folder \"ReplicationFiles/figures\" as a pdf file.\n\n# Usage\n\n```julia plots11()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots2-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots2","text":"plots2()\n\nGenerates a two-panel figure which displays the USDIA Income and its Weighted Adjustment, along with the Compensation, PPE, and R&D adjustments in billions of dollars from 1980 to 2018. \n\nEach panel represents a distinct subplot:\n\nPanel A: Illustrates the USDIA Income, Weighted Adjustment, Compensation, PPE, and R&D adjustments over the specified period. The USDIA Income is shown as a black line, the Weighted Adjustment is depicted in blue, the Compensation adjustment in a dashed red line, the PPE adjustment in a dash-dotted black line, and the R&D adjustment in a dotted green line.\nPanel B: Displays the USDIA Income and Weighted Adjustment, with additional statistical information like +/-2 standard deviations range shown in light blue, and the 25th and 75th percentiles shown with dashed black lines.\n\nThe figure is saved as a PDF in the folder \"ReplicationFiles/figures\" with the name \"Figure2.pdf\".\n\nThis function uses the GR backend for generating plots and the Plots.jl package for constructing the multi-panel figure.\n\nUsage\n\n```julia plots2()\n\nNo arguments needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots3-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots3","text":"plots3()\n\nGenerates a two-panel figure, each panel representing a distinct subplot related to the petroleum industry and its impact on the business-sector value.\n\nPanel A: Displays the petroleum prices over the years from 1980 to 2018. The petroleum prices are depicted as a black line in dollars per barrel. \nPanel B: Illustrates two distinct measures over the same period: The Weighted Adjustment of all industries (blue line) and the adjustment excluding petroleum industry (red dashed line). Both are represented as a share of the business-sector value added, in percent.\n\nThe figure is saved as a PDF in the folder \"ReplicationFiles/figures\" with the name \"Figure3.pdf\".\n\nThis function uses the GR backend for generating plots and the Plots.jl package for constructing the multi-panel figure.\n\nUsage\n\n```julia plots3()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots4-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots4","text":"This function replicates a figure 4, which consists of two subplots. The figure is saved in the folder \"ReplicationFiles/figures\" as a pdf file.\n\n# Usage\n```julia\nplots4()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots6-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots6","text":"This function replicates a figure 6, which consists of two subplots. The figure is saved in the folder \"ReplicationFiles/figures\" as a pdf file.     # Usage ```julia plots6()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots7-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots7","text":"This function replicates a figure 7, which consists of two subplots. The figure is saved in the folder \"ReplicationFiles/figures\" as a pdf file.     # Usage ```julia plots7()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots8-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots8","text":"This function replicates a figure 8, which consists of two subplots. The figure is saved in the folder \"ReplicationFiles/figures\" as a pdf file.\n\n# Usage\n\n```julia plots8()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.plots9-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.plots9","text":"This function replicates a figure 9, which consists of two subplots. The figure is saved in the folder \"ReplicationFiles/figures\" as a pdf file.\n\n# Usage\n\n```julia plots9()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.process_files-Tuple{Any}","page":"Home","title":"Offshore_Profit_Shifting_Replication.process_files","text":"process_files(filenames)\n\nProcesses a collection of Excel files and sheets into DataFrames, storing each in a dictionary with the filename as the key.\n\nArguments\n\nfilenames: A collection of tuples where each tuple contains a filename and a sheet name.\n\nReturns\n\nA dictionary with filenames as keys and processed DataFrames as values.\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.rename_and_process!-Tuple{Any, Any}","page":"Home","title":"Offshore_Profit_Shifting_Replication.rename_and_process!","text":"rename_and_process!(df, file)\n\nRenames columns, interpolates missing values, and reshapes the provided DataFrame df according to certain rules based on the provided file string. The DataFrame is also sorted and certain columns are selected based on their relevance to the filename.\n\nArguments\n\ndf: A DataFrame to be processed.\nfile: A string that determines certain renaming and selection rules.\n\nReturns\n\nA processed DataFrame.\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.table1-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.table1","text":"This function replicates table 1. The Table is saved in the folder \"ReplicationFiles/tables\" as a markdown file.\n\n# Usage\n\n```julia table1()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.table5-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.table5","text":"This function replicates table 5. The Table is saved in the folder \"ReplicationFiles/tables\" as a markdown file.     ```julia     table5()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"},{"location":"#Offshore_Profit_Shifting_Replication.table6-Tuple{}","page":"Home","title":"Offshore_Profit_Shifting_Replication.table6","text":"This function replicates table 6. The Table is saved in the folder \"ReplicationFiles/tables\" as a markdown file.     ```julia     table6()\n\nNo arguments are needed for this function\n\n\n\n\n\n","category":"method"}]
}
